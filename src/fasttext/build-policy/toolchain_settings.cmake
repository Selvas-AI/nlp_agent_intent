list(APPEND CMAKE_MODULE_PATH ${BUILD_POLICY_DIR})

# Toolchain setting for each platforms
# note: TOOLCHAIN_OPTION is defined for external project like a googletest
if(ANDROID)
  if(NOT ANDROID_STL)
    set(ANDROID_STL stlport_shared)
  endif()
  if(NOT ANDROID_STL_FORCE_FEATURES)
    set(ANDROID_STL_FORCE_FEATURES OFF)
  endif()
  if(NOT CMAKE_TOOLCHAIN_FILE)
    set(CMAKE_TOOLCHAIN_FILE ${BUILD_POLICY_DIR}/toolchain/android.toolchain.cmake)
  endif()
  set(TOOLCHAIN_OPTION
    -DANDROID=1
    -DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}
    -DANDROID_TOOLCHAIN_NAME=${ANDROID_TOOLCHAIN_NAME}
    -DANDROID_ABI=${ANDROID_ABI}
    -DANDROID_STL=${ANDROID_STL}
    -DANDROID_STL_FORCE_FEATURES=${ANDROID_STL_FORCE_FEATURES})

elseif(IOS)
  set(CMAKE_TOOLCHAIN_FILE ${BUILD_POLICY_DIR}/toolchain/ios.toolchain.cmake) 
  set(TOOLCHAIN_OPTION -DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}
    -DIOS_PLATFORM=${IOS_PLATFORM}
    -DIOS_ARCH=${IOS_ARCH})

elseif(RVCT)
  if(NOT RVCT_MAIN_VERSION)
    set(RVCT_MAIN_VERSION "3.1")
  endif()
  if(NOT RVCT_SUB_VERSION)
    set(RVCT_SUB_VERSION "569")
  endif()
  if(NOT RVCT_TARGET_CPU)
    set(RVCT_TARGET_CPU "ARM926EJ-S")
  endif()
  if(NOT CMAKE_TOOLCHAIN_FILE)
    set(CMAKE_TOOLCHAIN_FILE ${BUILD_POLICY_DIR}/toolchain/rvct.toolchain.cmake) 
  endif()
  set(TOOLCHAIN_OPTION 
    -DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE} 
    -DRVCT_MAIN_VERSION=${RVCT_MAIN_VERSION}
    -DRVCT_SUB_VERSION=${RVCT_SUB_VERSION}
    -DRVCT_TARGET_CPU=${RVCT_TARGET_CPU})

elseif(MIPS)
  set(CMAKE_TOOLCHAIN_FILE ${BUILD_POLICY_DIR}/toolchain/mips.toolchain.cmake) 
  set(TOOLCHAIN_OPTION -DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE})

elseif(TIZEN)
  set(CMAKE_TOOLCHAIN_FILE ${BUILD_POLICY_DIR}/toolchain/tizen.toolchain.cmake)
  set(TOOLCHAIN_OPTION -DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}
      -DTIZEN=1)
endif()

include(${BUILD_POLICY_DIR}/internal_utils.cmake)

find_package(Git)
if(REVISION)
  string(SUBSTRING ${REVISION} 0 8 GIT_HASH_VALUE)
else()
  if(GIT_EXECUTABLE)
    GIT_WC_INFO(${PROJECT_ROOT_DIR} Project)
    STRING(SUBSTRING ${Project_WC_REVISION_HASH} 0 8 GIT_HASH_VALUE)
  endif()
endif()

if(NOT WIN32 OR ANDROID)
  if (NOT DEFINED CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug CACHE
     STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
  endif()
endif()
